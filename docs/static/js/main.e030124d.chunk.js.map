{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","setTimeout","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAACS,GAAD,OAAUP,GAAV,mBAAyBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAD,MAAU,CAC5BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARlB,kBAUZM,GAVY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECHwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAZAC,qBAAU,WACNC,YAAW,WACPzB,EAAQC,GAAUyB,MAAK,SAACZ,GACpBS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAGlB,OAEJ,CAACpB,IAEGqB,EDf0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEbxBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,SAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KACA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAeA,IAGxB2C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCZ7B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e030124d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('')\n    \n    const handlerInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handlerSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories((cat) => [inputValue, ...cat])\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handlerSubmit}>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={handlerInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=s0o1Ws9Ow3D3kKgugJFG3BmsWX91P8PS`;\n    const response = await fetch(url);\n    const {data} = await response.json()\n\n    const gifs = data.map((img) => ({\n        id: img.id,\n        title: img.title,\n        url: img.images.downsized_medium.url\n    }))\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>   \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category)\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\">\n                \n                {\n                    images.map((img) => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect(() => {\n        setTimeout(() => {\n            getGifs(category).then((images) => {\n                setState({\n                    data: images,\n                    loading: false\n                })\n            })\n        }, 2000);\n    \n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Goku']);\n    return (\n        <>\n            <h2>GifExpertApp</h2> \n            <hr />\n\n            <AddCategory setCategories={setCategories}/>\n\n            {\n                categories.map((category) => \n                    <GifGrid \n                        key={category}\n                        category={category}\n                    />\n                )\n            }\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}